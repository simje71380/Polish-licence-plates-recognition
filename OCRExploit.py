from tensorflow import keras
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
from tensorflow.keras.preprocessing import image as image_utils
import numpy as np
from sklearn.preprocessing import LabelEncoder

def show_image(image_path):
    image = mpimg.imread(image_path)
    plt.imshow(image, cmap='gray')

def load_and_scale_image(image_path):
    image = image_utils.load_img(image_path, color_mode="grayscale", target_size=(64,64))
    return image

def predict(file_path):
    model = keras.models.load_model('Tensorflow\OCR_model')
    label_decoder = LabelEncoder()
    label_decoder.classes_ = np.load('Tensorflow\OCR_model\label_encoder.npy')
    show_image(file_path)
    image = load_and_scale_image(file_path)
    image = image_utils.img_to_array(image)
    image = image.reshape(1,64,64,1) 
    image = image/255
    prediction = model.predict(image)
    print(prediction.shape)
    # convert prediction to letter or number
    predicted_labels = label_decoder.inverse_transform(np.argmax(prediction, axis=1))
    return predicted_labels

if __name__ == "__main__":
    

    print(predict('OCRDataset/testing_data/L/28331.png'))
    plt.show()

